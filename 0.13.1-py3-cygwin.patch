--- origsrc/pyOpenSSL-0.13.1/OpenSSL/ssl/ssl.c	2011-08-14 17:06:11.000000000 -0500
+++ src/pyOpenSSL-0.13.1/OpenSSL/ssl/ssl.c	2014-02-06 01:25:56.923133800 -0600
@@ -18,6 +18,9 @@
 #  if !(defined(__BEOS__) || defined(__CYGWIN__))
 #    include <netinet/tcp.h>
 #  endif
+#  ifdef __CYGWIN__
+#    include <dlfcn.h>
+#  endif
 #else
 #  include <winsock.h>
 #  include <wincrypt.h>
@@ -115,6 +118,19 @@ PyOpenSSL_MODINIT(SSL) {
     new_x509 = (crypto_X509Obj* (*)(X509*, int))GetProcAddress(crypto, "crypto_X509_New");
     new_x509name = (crypto_X509NameObj* (*)(X509_NAME*, int))GetProcAddress(crypto, "crypto_X509Name_New");
     new_x509store = (crypto_X509StoreObj* (*)(X509_STORE*, int))GetProcAddress(crypto, "crypto_X509Store_New");
+#   elif defined(__CYGWIN__)
+    PyObject *pmod = PyImport_ImportModule("OpenSSL.crypto");
+    const char *filename = PyModule_GetFilename(pmod);
+    Py_DECREF(pmod);
+    if (filename == NULL) {
+        PyErr_SetString(PyExc_RuntimeError, "Unable to get crypto module");
+        PyOpenSSL_MODRETURN(NULL);
+    }
+
+    void *crypto = dlopen(filename, RTLD_LOCAL);
+    new_x509 = (crypto_X509Obj* (*)(X509*, int))dlsym(crypto, "crypto_X509_New");
+    new_x509name = (crypto_X509NameObj* (*)(X509_NAME*, int))dlsym(crypto, "crypto_X509Name_New");
+    new_x509store = (crypto_X509StoreObj* (*)(X509_STORE*, int))dlsym(crypto, "crypto_X509Store_New");
 #   else
     new_x509 = crypto_X509_New;
     new_x509name = crypto_X509Name_New;
